{"ast":null,"code":"// @ts-nocheck\nimport { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage/session';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from \"./state/reducers/rootReducer\"; // import initialStateRedux from './state/initialStateRedux';\n// eslint-disable-next-line max-len\n// if you want to use local storage instead of session storage, do the following: import storage from 'redux-persist/lib/storage';\n\nvar persistConfig = {\n  key: 'primary',\n  storage: storage,\n  whitelist: [] // place to select which state you want to persist\n\n}; // const initialState:PreloadedState<any> = initialStateRedux;\n\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\nvar store = createStore(persistedReducer, composeWithDevTools(applyMiddleware()));\nvar persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/Users/niklaskernpunkt/Projekte/einstellungsaufgabe/src/store.js"],"names":["createStore","applyMiddleware","persistStore","persistReducer","storage","composeWithDevTools","rootReducer","persistConfig","key","whitelist","persistedReducer","store","persistor"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA4C,eAA5C;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,8BAAxB,C,CACA;AAEA;AACA;;AACA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,SADe;AAEpBJ,EAAAA,OAAO,EAAPA,OAFoB;AAGpBK,EAAAA,SAAS,EAAE,EAHS,CAGL;;AAHK,CAAtB,C,CAMA;;AAEA,IAAMC,gBAAgB,GAAGP,cAAc,CAACI,aAAD,EAAgBD,WAAhB,CAAvC;AAEA,IAAIK,KAAK,GAAGX,WAAW,CAACU,gBAAD,EAAmBL,mBAAmB,CAACJ,eAAe,EAAhB,CAAtC,CAAvB;AACA,IAAIW,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA5B;AAEA,SAAQA,KAAR,EAAeC,SAAf","sourcesContent":["// @ts-nocheck\nimport { createStore, applyMiddleware } from 'redux';\nimport {persistStore ,persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage/session';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from \"./state/reducers/rootReducer\"\n// import initialStateRedux from './state/initialStateRedux';\n\n// eslint-disable-next-line max-len\n// if you want to use local storage instead of session storage, do the following: import storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'primary',\n  storage,\n  whitelist: [], // place to select which state you want to persist\n};\n\n// const initialState:PreloadedState<any> = initialStateRedux;\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nlet store = createStore(persistedReducer, composeWithDevTools(applyMiddleware()))\nlet persistor = persistStore(store)\n\nexport {store, persistor}"]},"metadata":{},"sourceType":"module"}